---
title: GSA Stipend & Cost-of-Living Report
subtitle: Appendix A. Full Stipend Report
author: Alex Barth, Secretary of Data Management
date: '`r Sys.Date()`'
format:
  pdf
execute:
  echo: FALSE
  warning: FALSE
  message: FALSE
---

# General Information

Stipend data were self reported in the GSA survey. Full data processing information are available in the Data Processing Report. It should be noted that because these values are self-reported the data are not without question. Several responses did not provide usable information and were removed from this analysis. However, the purpose of this information is to understand the distribution of stipends provided by different programs and how they compare to other universities. Thus, we did not prioritize individual responses but rather getting information across multiple programs. In total, we received 324 usable responses from 63 different programs in 11 Colleges across the university.

# USC Reported Stipends

### Distribution of reported stipends in the survey

Individual survey responses for the stipend value are shown below. It should be noted that stipends are not distinguished between 9-month and 12-month salaries.

```{r, fig.cap='Distribution of annual guaranteed stipends for all survey respondants.'}
rm(list = ls())
library(ggusc)
library(ggpubr)
library(dplyr)
library(ggplot2)
stipends_clean <- read.table('../data/01_clean-stipends.tsv', sep = '\t')

ggplot(stipends_clean)+
  geom_density(aes(x=stipend_amt),
               fill = usc_cols(1))+
  labs(x = 'Reported Annual Guaranteed Funding [$]', y= '') +
  scale_y_continuous(expand = c(0,0),
                     labels = function(x) paste0(100*x, '%'))+
  theme_pubr()
  

# summary(stipends_clean$stipend_amt)
```

<br>
<br>

### Distribution of average reported stipend

To understand the average stipend given by departments/colleges at the university, individual responses within programs were averaged. The university wide average stipend was \$15,047.22. The 50% high density interval of programs paid between \$12,915.38 and \$20,000.00.

The table below provides the average reported value for all stipends by department
```{r, fig.cap='Average stipend by program.'}

stipends_clean |> 
  group_by(Program) |> 
  summarise(mean = mean(stipend_amt)) |> 
  ggplot()+
    geom_density(aes(x=mean),
                 fill = usc_cols(1))+
    labs(x = 'Program Annual Guaranteed Funding [$]', y= '') +
    scale_y_continuous(expand = c(0,0),
                       labels = function(x) paste0(100*x, '%'))+
    scale_x_continuous(expand = c(0,0))+
    theme_pubr()


library(knitr)
options(knitr.kable.NA = '')
stipends_clean |> 
  group_by(Program, College) |> 
  summarise(`Mean Stipend` = mean(stipend_amt),
            `Standard Dev` = sd(stipend_amt)) |> 
  kable(replace_na = "")

```



## Stipends by College

```{r, fig.height=6, fig.cap='Average stipend by college.'}



stipends_by_college <- stipends_clean |> 
  group_by(Program, College) |> 
  summarize(mean_by_prog = mean(stipend_amt)) |> 
  group_by(College) |> 
  summarize(mean = mean(mean_by_prog),
            sd = sd(mean_by_prog))
    
    
stipends_by_college$College <- factor(stipends_by_college$College,
                                      levels = stipends_by_college$College[order(stipends_by_college$mean,
                                                                                 decreasing = T)])

stipends_by_college |> 
  kable()

ggplot(stipends_by_college)+
  geom_bar(aes(y = mean,
               x = College,
               fill = College),
           stat = 'identity') +
  geom_errorbar(aes(ymax = mean + sd,
                    ymin = mean,
                    x = College,
                    color = College),
                width = 0.5)+
  scale_fill_usc(palette = 'confident')+
  scale_color_usc(palette = 'confident')+
  labs(y = 'Average Program Stipend by College',
       x = '',
       fill = "") +
  guides(color = FALSE, fill = FALSE)+
  scale_y_continuous(expand = c(0,0))+
  theme_pubr()+
  theme(axis.text.x = element_text(angle=45, hjust = c(1,1)))


```


## Stipends by Program Type

```{r, fig.cap='Average stipend by program type.'}


stipends_by_type <- stipends_clean |> 
  group_by(Program, program_type) |> 
  summarize(mean_by_prog = mean(stipend_amt)) |> 
  group_by(program_type) |> 
  summarize(mean = mean(mean_by_prog),
            sd = sd(mean_by_prog))
    
    
stipends_by_type$program_type <- factor(stipends_by_type$program_type,
                                      levels = stipends_by_type$program_type[order(stipends_by_type$mean,
                                                                                 decreasing = T)])

stipends_by_type |> 
  kable()

ggplot(stipends_by_type)+
  geom_bar(aes(y = mean,
               x = program_type,
               fill = program_type),
           stat = 'identity') +
  geom_errorbar(aes(ymax = mean + sd,
                    ymin = mean,
                    x = program_type,
                    color = program_type),
                width = 0.5)+
  scale_fill_usc(palette = 'confident')+
  scale_color_usc(palette = 'confident')+
  labs(y = 'Average Stipend by Program Type',
       x = '',
       fill = "") +
  guides(color = FALSE, fill = FALSE)+
  scale_y_continuous(expand = c(0,0))+
  theme_pubr()+
  theme(axis.text.x = element_text(angle=45, hjust = c(1,1)))



```


## What percentage of students are recieving additional funding?

Students were asked to disclose any additional funding they received outside their departmental contracts. While approximately 18.8% of respondents indicated that they were receiving additional funding, it was clear that some respondents reported smaller, one-time grants, which are not indicative of their overall financial situation.

```{r, fig.cap='Proportion of students who responded they were receiving additional funding.'}
ggplot(stipends_clean)+
  geom_bar(aes(x = addtl_funding, y = after_stat(count)/sum(after_stat(count)),
               fill = addtl_funding),
           stat = 'count')+
  guides(fill = 'none')+
  scale_fill_usc(palette = 'confident')+
  labs(y='Proportion of Respondents', x= "")+
  scale_y_continuous(expand = c(0,0))+
  theme_pubr()
```
### How much additional funding?

```{r, fig.cap='Distribution of additional funding amount.'}
ggplot(stipends_clean)+
    geom_density(aes(x=addtl_amt),
                 fill = usc_cols(1))+
    labs(x = 'Additional Funding [$]', y= '') +
    scale_y_continuous(expand = c(0,0),
                       labels = function(x) paste0(100*x, '%'))+
    scale_x_continuous(expand = c(0,0))+
    theme_pubr()

```



# Market Analysis 

## National-Program Comparison

To compare USC graduate student stipends to other universities, data were collected from a publicly available repository of phd stipends [(link)](https://www.phdstipends.com/). These data required similar processing to our stipend and details can be found in Appendix C. It should be noted that this comparison source does not encourage responses from professional students who are not working full time as graduate assistants but rather supplementing their income while completing a professional degree. While that discrepancy can explain some of the lower-end data point USC has, it is not a full explanation as there are a few programs which do pay below the poverty line. To get a better view of specific groups, look to the college/program type comparison charts or the data exploration widget.

Cost of living variation between university locations was taken into account by using metro area's living wage for a single individual based on [MIT's Cost of Living Calculator](https://livingwage.mit.edu/). Poverty levels were also accessed from the same source. In all sub-group comparisons shown below, a black line also indicates a linear regression of competitor universities.

```{r, fig.cap='Market Analysis of USC annual stipend compared to other national universities. Green line indicates MIT living wage for a single individual, red line indicates the poverty level, black line is the regression of competitor universities.'}

phdstipends <- read.table('../data/02_webphdstipends-cleaned.tsv',
                          sep = '\t', header = T, na.strings = '<NA>')

phdstipends$year_start <- phdstipends$year |> 
  strsplit('-') |> 
  sapply(`[[`,1)

phd_current <- phdstipends[phdstipends$year_start >= 2020,]

phd_summed <- phd_current |> 
  group_by(Program, College, Uni, stipend, living, poverty) |> 
  summarize(mean = mean(stipend))


stipends_by_program <- stipends_clean |> 
  group_by(Program, College, program_type) |> 
  summarize(mean = mean(stipend_amt))

ggplot() +
  geom_point(data = phd_summed,
             aes(x = living, y = stipend),
             color = 'grey', alpha = .5)+
  geom_point(data = stipends_by_program,
             aes(x = 35609.6, y = mean),
             color = usc_cols(1))+
  stat_smooth(data = phd_summed,
              aes(x = living, y = stipend),
              color = 'black',
              method = 'lm', se = F)+
  stat_smooth(data = phd_current,
            aes(y = living, x = living),
            method = 'lm', se = F,
            fullrange = T, color = 'green') +
  stat_smooth(data = phd_current,
              aes(x = living, y = poverty),
              method = 'lm', se = F, color = 'red',
              fullrange = T) +
  labs(x = 'Living Wage [$]', y = 'Graduate Annual Stipend [$]')+
  theme_pubr()


```



## Competitor Specific Comparison

Local and SEC comparison universities were also selected for direct comparison.

```{r, fig.cap='Market Comparison for other SEC or nearby universities. Green line indicates MIT living wage for a single individual, red line indicates the poverty level, black line is the regression of competitor universities.'}

comparison_unis <- c('Virginia Tech','University of Florida','University of Missouri','University of South Florida',
                     'University of Alabama','University of North Carolina--Chapel Hill','Vanderbilt University',
                     'Duke University','University of Virginia','Emory University','Florida State University',
                     'University of Georgia','Wake Forest University','University of Kentucky','Auburn University')

comparison_stipends <- phd_current[phd_current$Uni %in% comparison_unis,]

comparison_summed <- comparison_stipends |> 
  group_by(Program, Uni, stipend, living, poverty) |> 
  summarize(mean = mean(stipend))

ggplot() +
  geom_point(data = comparison_summed,
             aes(x = living, y = stipend),
             color = 'grey', alpha = .5)+
  geom_point(data = stipends_by_program,
             aes(x = 35609.6, y = mean),
             color = usc_cols(1))+
  stat_smooth(data = comparison_summed,
              aes(x = living, y = stipend),
              color = 'black',
              method = 'lm', se = F)+
  stat_smooth(data = comparison_summed,
            aes(y = living, x = living),
            method = 'lm', se = F,
            fullrange = T, col = 'green') +
  stat_smooth(data = comparison_summed,
              aes(x = living, y = poverty),
              method = 'lm', se = F, color = 'red',
              fullrange = T) +
  theme_pubr() +
  labs(x = 'Living Wage [$]', y = 'Graduate Annual Stipend [$]')




```


## Comparison by College

```{r, fig.cap='Market analysis comparisons for sub-groups separated by college. Comparison universities were assigned to the college that they would have been in, if at USC. Green line indicates MIT living wage for a single individual, red line indicates the poverty level, black line is the regression of competitor universities.'}

college_comparer_plot <- function(college) {
  
  
  plot = ggplot() +
    geom_point(data = phd_summed[phd_summed$College == college,],
               aes(x = living, y = stipend),
               color = 'grey', alpha = .5)+
    geom_point(data = stipends_by_program[stipends_by_program$College == college,],
               aes(x = 35609.6, y = mean),
               color = usc_cols(1))+
    stat_smooth(data = phd_summed[phd_summed$College == college,],
                aes(x = living, y = stipend),
                color = 'black',
                method = 'lm', se = F)+
    stat_smooth(data = phd_current,
              aes(y = living, x = living),
              method = 'lm', se = F,
              fullrange = T, color = 'green') +
    stat_smooth(data = phd_current,
                aes(x = living, y = poverty),
                method = 'lm', se = F, color = 'red',
                fullrange = T) +
    theme_pubr()+
    labs(x = 'Living Wage [$]', y = 'Graduate Annual Stipend [$]',
         subtitle = college)


    
  return(plot)
}


for(college in unique(stipends_by_program$College)) {
  print(college_comparer_plot(college))
}


```


## Comparison by Program Type


```{r, fig.cap='Market analysis for comparison universities based on program type. Green line indicates MIT living wage for a single individual, red line indicates the poverty level, black line is the regression of competitor universities.'}
# to compare program type, we need to match for only matching programs


matching_phds <- phd_current[phd_current$Program %in% stipends_by_program$Program,]
matching_phds <- stipends_by_program |> 
  select(Program, program_type) |> 
  right_join(matching_phds, by = c("Program", "College"))

program_type_plotter <- function(program_type) {
  
  
  plot = ggplot() +
    geom_point(data = matching_phds[matching_phds$program_type == program_type,],
               aes(x = living, y = stipend),
               color = 'grey', alpha = .5)+
    geom_point(data = stipends_by_program[stipends_by_program$program_type == program_type,],
               aes(x = 35609.6, y = mean),
               color = usc_cols(1))+
    stat_smooth(data = matching_phds[matching_phds$program_type == program_type,],
                aes(x = living, y = stipend),
                color = 'black',
                method = 'lm', se = F)+
    stat_smooth(data = phd_current,
              aes(y = living, x = living),
              method = 'lm', se = F,
              fullrange = T, color = 'green') +
    stat_smooth(data = phd_current,
                aes(x = living, y = poverty),
                method = 'lm', se = F, color = 'red',
                fullrange = T) +
    theme_pubr()+
    labs(x = 'Living Wage [$]', y = 'Graduate Annual Stipend [$]',
         subtitle = program_type)


    
  return(plot)
}


for(program_type in unique(stipends_by_program$program_type)) {
  program_type_plotter(program_type) |> 
    print()
}

```


## How do stipends vary by university ranking?

To assess how graduate student pay correlates with university prestige, stipends were visualized by a University's US News Ranking. 

```{r, fig.cap='Graduate stipend shown by US News Ranking. Garnet points indicate USC while grey indicates other universities'}

ggplot() +
  geom_point(data = matching_phds,
             aes(x = as.numeric(rank), 
                 y = stipend/living),
             color = 'grey', alpha = 0.5) +
  geom_point(data = stipends_by_program,
             aes(x = 115,
                 y = mean / 35609.6),
             col = usc_cols(1)) +
  labs(x = 'US News Ranking', y = 'Stipend / Living Wage')+
  theme_pubr()


```


## Graduate Pay Ratio by College and Program Type

```{r}

rank_compare_plotter <- function(comparison, group) {
  
  usc_plots <- stipends_by_program[stipends_by_program[[comparison]] == group,]
  matching_plots <- matching_phds[matching_phds[[comparison]] == group, ]
  
  ret_plot <- ggplot() +
  geom_point(data = matching_plots,
             aes(x = as.numeric(rank), 
                 y = stipend/living),
             color = 'grey', alpha = 0.5) +
  geom_point(data = usc_plots,
             aes(x = 115,
                 y = mean / 35609.6),
             col = usc_cols(1)) +
  labs(x = 'US News Ranking', y = 'Stipend / Living Wage',
       title = group)+
  theme_pubr()

  
  return(ret_plot)
}

for(college in unique(stipends_by_program$College)) {
  print(rank_compare_plotter('College',college))
}

for(program_type in unique(stipends_by_program$program_type)) {
  print(rank_compare_plotter('program_type', program_type))
}


```

